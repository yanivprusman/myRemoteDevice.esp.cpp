"use strict";
// automatically generated by the FlatBuffers compiler, do not modify
Object.defineProperty(exports, "__esModule", { value: true });
exports.MRD = void 0;
/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */
var flatbuffers = require("flatbuffers");
var actions_js_1 = require("../mrd/actions.js");
var types_js_1 = require("../mrd/types.js");
var MRD = /** @class */ (function () {
    function MRD() {
        this.bb = null;
        this.bb_pos = 0;
    }
    MRD.prototype.__init = function (i, bb) {
        this.bb_pos = i;
        this.bb = bb;
        return this;
    };
    MRD.getRootAsMRD = function (bb, obj) {
        return (obj || new MRD()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };
    MRD.getSizePrefixedRootAsMRD = function (bb, obj) {
        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
        return (obj || new MRD()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };
    MRD.prototype.type = function () {
        var offset = this.bb.__offset(this.bb_pos, 4);
        return offset ? this.bb.readInt8(this.bb_pos + offset) : types_js_1.types.server;
    };
    MRD.prototype.action = function () {
        var offset = this.bb.__offset(this.bb_pos, 6);
        return offset ? this.bb.readInt8(this.bb_pos + offset) : actions_js_1.actions.getPage;
    };
    MRD.prototype.data = function (optionalEncoding) {
        var offset = this.bb.__offset(this.bb_pos, 8);
        return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
    };
    MRD.startMRD = function (builder) {
        builder.startObject(3);
    };
    MRD.addType = function (builder, type) {
        builder.addFieldInt8(0, type, types_js_1.types.server);
    };
    MRD.addAction = function (builder, action) {
        builder.addFieldInt8(1, action, actions_js_1.actions.getPage);
    };
    MRD.addData = function (builder, dataOffset) {
        builder.addFieldOffset(2, dataOffset, 0);
    };
    MRD.endMRD = function (builder) {
        var offset = builder.endObject();
        return offset;
    };
    MRD.finishMRDBuffer = function (builder, offset) {
        builder.finish(offset);
    };
    MRD.finishSizePrefixedMRDBuffer = function (builder, offset) {
        builder.finish(offset, undefined, true);
    };
    MRD.createMRD = function (builder, type, action, dataOffset) {
        MRD.startMRD(builder);
        MRD.addType(builder, type);
        MRD.addAction(builder, action);
        MRD.addData(builder, dataOffset);
        return MRD.endMRD(builder);
    };
    return MRD;
}());
exports.MRD = MRD;
